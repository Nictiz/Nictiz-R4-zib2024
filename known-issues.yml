---
# The issues here are deliberate deviations from the guidelines, as flagged by the qa tooling.
# For each issue documented, a reason for deviating from the guidelines is given.

issues should occur: true

zib-HealthcareProvider:
  zib deviations:
    Location.address:
      - datatype: Address instead of a reference
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.
      - cardinality: 0..1 instead of 0..*
        reason: The cardinality mismatch between the zib (0..*) and FHIR (0..1) is explained by the restriction of FHIR to limit the Location.address to a physical address while the zib allows for other types of addresses (e.g. a postal address). Other types of addresses than a physical address are given in Organization.address which is referenced by Location.managingOrganization.
    Location.telecom:
      - cardinality: 0..* instead of 0..1
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the missing root element of zib part ContactInformation in FHIR. Instead, the two containers of the zib (TelephoneNumbers and EmailAddresses), which both have a cardinality of 0..*, are mapped directly into the resource. Thereby this mapping is still honoring the cardinality requirements of the zib.
    Location.telecom*:
      - datatype: ContactPoint instead of a reference
        reason: ContactInformation in FHIR is represented using the ContactPoint datatype, not as a separate resource. Because the FHIR profile for ContactInformation consists of two parts the root concept of ContactInformation is mapped on .telecom.

unmapped zib concepts:
  - NL-CM:17.2.10: HealthcareProvider.LocationNumber
    reason: This zib concept is problematic to map cleanly to FHIR and it has been deemed too uncommon in practice to warrant an extension.

zib-LaboratoryTestResult:
  zib deviations:
    Observation.status:
      - cardinality: 1..1 instead of 0..1
        reason: Although the equivalent concept is optional in the zib, this element is required in FHIR.
    Observation.code:
      - cardinality: 1..1 instead of 0..1
        reason: This element is mapped to the concepts PanelOrBattery and TestCode at the same time. PanelOrBattery is marked as optional in the zib, but this is strictly not true; it must be absent if the zib instantiates a singular laboratory test, but is required if the zib instantiates a panel. Therefore, both mappings to this element are in fact required.
    Observation.value[x]:
      - datatype: Quantity instead of ANY
        reason: In FHIR there's no datatype ANY. All stated datatypes in the description can be accommodated using this element (Quantity and CodeableConcept are in fact both supported).
    Observation.referenceRange.*:
      - datatype: Quantity instead of ANY
        reason: The zib concepts ReferenceRangeUpperLimit and ReferenceRangeLowerLimit are defined as datatype ANY, but these concepts only have meaning when they apply to a Quantity. See https://bits.nictiz.nl/browse/ZIB-1703.

zib-LaboratoryTestResult.Specimen:
  zib deviations:
    Specimen.identifier:
      - cardinality: 0..* instead of 0..1
        reason: Although a single SpecimenId is allowed according to the zib, .identifier is often used for additional identifiers outside the scope of the zib. It's not possible to create a slice or pattern specifically for SpecimenId without further formal requirements by the zib.
    Specimen.collection.bodySite:
      - datatype: CodeableConcept instead of a reference
        reason: Zib AnatomicalLocation is implemented as a datatype profile on CodeableConcept, so the datatype is not a Reference.
    Specimen.container.extension:specimenNumberExtension.value[x]:
      - cardinality: 1..1 instead of 0..1
        reason: The value in the extension is 1..1, but the extension itself is 0..1, effectively matching the zib cardinality.
---
# The following issues are not "real" deviations stemming from design choices, but rather problems that pop up due to
# shortcomings in tooling, the used terminology server, etc.
# These might occur in one or more profiles, or in none if they have been fixed in the meantime. 

issues should occur: false

zib-AddressInformation:
  zib deviations:
    Address.line.extension:houseNumberIndication.value[x]:
      - datatype: string instead of CD
        reason: The mapping of zib AddressInformation on the FHIR Address datatype is the result of compatibility with HL7v3, which is the format that a lot of healthcare data in the Netherlands is stored in. As a result of this, the zib concept HouseNumberIndication with CD datatype is mapped to a FHIR string datatype with a constraint added (the value can only be 'by' or 'to' or 'OTH').
    Address.line.extension:*.value[x]:
      - cardinality: 1..1 instead of 0..1
        reason: The value of the extension is required, but the extension itself is optional, making the effective cardinality 0..1 as required by the zib.
