---
# The issues here are deliberate deviations from the guidelines, as flagged by the qa tooling.
# For each issue documented, a reason for deviating from the guidelines is given.

issues should occur: true

ext-LanguageProficiency.CommunicationDetails:
  zib deviations:
    Extension.value[x]:
      - cardinality: 0..1 instead of 0..*
        reason: FHIR restricts Extension.value to a max cardinality of 0..1. To use it more than once, the extension is added 0..* in the hosting element.

nl-core-ContactPerson-full-02:
  ignored issues:
    RelatedPerson.address[0].line[0].extension[1].value.ofType(string):
      - message: value should not start or finish with whitespace ' De Groene Draeck'
        reason: To communicate a HouseNumberAddition without a HouseNumberLetter, a leading space is used.

pattern-NlCoreHealthProfessionalReference:
  ignored issues:
    StructureDefinition:
      - message: "Constraint failed: sd-pg-08: 'The title of the StructureDefinition should conform to the profiling guidelines'"
        reason: The title is shown in the hosting profiles as the name of the datatype. Since the title according to the profiling guidelines ("pattern NlCoreHealthProfessionalReference") is deemed confusing in some cases, the title is simply "Reference". See https://bits.nictiz.nl/browse/MM-3854.

pattern-VitalSigns:
  ignored issues:
    Observation.category:VSCat:
      - message: "Constraint failed: sd-pg-13: 'Slice names should be camelCased starting with a lowercase letter.'"
        reason: This slice name is adopted from the Vital Signs profile.

pattern-ZibHealthProfessionalReference:
  ignored issues:
    StructureDefinition:
      - message: "Constraint failed: sd-pg-08: 'The title of the StructureDefinition should conform to the profiling guidelines'"
        reason: The title is shown in the hosting profiles as the name of the datatype. Since the title according to the profiling guidelines ("pattern ZibHealthProfessionalReference") is deemed confusing in some cases, the title is simply "Reference". See https://bits.nictiz.nl/browse/MM-3854.

zib-AbilityToDrink.DrinkingLimitations:
  zib deviations:
    Observation.value[x]:valueCodeableConcept:
      - cardinality: 0..1 instead of 0..*
        reason: The value can only occur once, but this profile is referenced 0..* times via .hasMember, making the effective cardinality 0..* as required by the zib.

zib-AbilityToEat.EatingLimitations:
  zib deviations:
    Observation.value[x]:valueCodeableConcept:
      - cardinality: 0..1 instead of 0..*
        reason: The value can only occur once, but this profile is referenced 0..* times via .hasMember, making the effective cardinality 0..* as required by the zib.

zib-AbilityToUseToilet:
  zib deviations:
    Observation:
      - short: AbilityToUseToilet instead of ToiletUseAbility
        reason: The root of the zib is called "ToiletUseAbility" (which is incorrect), even though the zib itself is called "AbilityToUseToilet".

zib-AddressInformation:
  zib deviations:
    Address.line.extension:houseNumberIndication.value[x]:
      - datatype: string instead of CD
        reason: The mapping of zib AddressInformation on the FHIR Address datatype is the result of compatibility with HL7v3, which is the format that a lot of healthcare data in the Netherlands is stored in. As a result of this, the zib concept HouseNumberIndication with CD datatype is mapped to a FHIR string datatype.
    Address.line.extension:*.value[x]:
      - cardinality: 1..1 instead of 0..1
        reason: The value of the extension is required, but the extension itself is optional, making the effective cardinality 0..1 as required by the zib.

zib-BodyHeight:
  zib deviations:
    Observation.effective[x]:effectiveDateTime:
      - cardinality: 1..1 instead of 0..1
        reason: In the HL7 Vital Signs profile the .effective[x] element is required, which is adopted in the zib profile as well to align with the former profile as much as possible.

zib-BodyWeight:
  zib deviations:
    Observation.effective[x]:effectiveDateTime:
      - cardinality: 1..1 instead of 0..1
        reason: In the HL7 Vital Signs profile the .effective[x] element is required, which is adopted in the zib profile as well to align with the former profile as much as possible.

zib-ContactInformation-TelephoneNumbers:
  zib deviations:
    ContactPoint.system:
      - cardinality: 1..1 instead of 0..1
        reason: Although TelecomType and NumberType are optional in the zib, ContactPoint.system is used to identify the TelephoneNumbers concept itself when this datatype is added to a profile. If only a telephone number is given without TelecomType and NumberType, it will fall in the default slice of the sliced element with datatype ContactPoint.

zib-ContactPerson:
  zib deviations:
    RelatedPerson.name:
      - cardinality: 0..* instead of 0..1
        reason: The name information according to zib NameInformation may be split up over multiple instances of RelatedPerson.name.
      - datatype: HumanName instead of Reference
        for: NL-CM:3.1.4 (RelatedPerson.NameInformation)
        reason: A name in FHIR is represented using the HumanName datatype, not as a separate resource.
      - datatype: HumanName instead of ST
        for: NL-CM:1.1.5 (Payer.PayerName)
        reason: A name in FHIR is represented using the HumanName datatype, not as a string.
    RelatedPerson.name:nameInformation:
      - datatype: HumanName instead of rootconcept
        reason: A name in FHIR is represented using the HumanName datatype, not as a separate resource.
    RelatedPerson.telecom:
      - cardinality: 0..* instead of 0..1
        for: NL-CM:3.1.6 (ContactPerson.ContactInformation)
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the missing root element of zib ContactInformation in FHIR. Instead, the two containers of the zib (TelephoneNumbers and EmailAddresses), which both have a cardinality of 0..*, are mapped directly into the resource. Thereby this mapping is still honoring the cardinality requirements of the zib.
      - datatype: ContactPoint instead of Reference
        for: NL-CM:3.1.6 (ContactPerson.ContactInformation)
        reason: Contact information in FHIR is represented using the ContactPoint datatype, not as a separate resource.
      - datatype: ContactPoint instead of rootconcept
        for: NL-CM:20.6.1 (ContactInformation)
        reason: Contact information in FHIR is represented using the ContactPoint datatype, not as a separate resource.
      - cardinality: 0..* instead of 0..1
        for: NL-CM:1.1.12 (Payer.ContactInformation)
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the missing root element of zib ContactInformation in FHIR. Instead, the two containers of the zib (TelephoneNumbers and EmailAddresses), which both have a cardinality of 0..*, are mapped directly into the resource. Thereby this mapping is still honoring the cardinality requirements of the zib.
      - datatype: ContactPoint instead of Reference
        for: NL-CM:1.1.12 (Payer.ContactInformation)
        reason: Contact information in FHIR is represented using the ContactPoint datatype, not as a separate resource.
    RelatedPerson.telecom:*:
      - datatype: ContactPoint instead of container
        reason: Contact information in FHIR is represented using the ContactPoint datatype, not as a BackboneElement.
    RelatedPerson.address:
      - datatype: Address instead of Reference
        for: NL-CM:3.1.5 (ContactPerson.AddressInformation)
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.
      - datatype: Address instead of Reference
        for: NL-CM:1.1.17 (Payer.AddressInformation)
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.
      - datatype: Address instead of rootconcept
        for: NL-CM:20.5.1 (AddressInformation)
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.

zib-HeadCircumference:
  zib deviations:
    Observation.effective[x]:effectiveDateTime:
      - cardinality: 1..1 instead of 0..1
        reason: In the HL7 Vital Signs profile the .effective[x] element is required, which is adopted in the zib profile as well to align with the former profile as much as possible.

zib-HealthcareProvider:
  zib deviations:
    Location.telecom:
      - cardinality: 0..* instead of 0..1
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the missing root element of zib ContactInformation in FHIR. Instead, the two containers of the zib (TelephoneNumbers and EmailAddresses), which both have a cardinality of 0..*, are mapped directly into the resource. Thereby this mapping is still honoring the cardinality requirements of the zib.
      - datatype: ContactPoint instead of Reference
        for: NL-CM:17.2.6 (HealthcareProvider.ContactInformation)
        reason: Contact information in FHIR is represented using the ContactPoint datatype, not as a separate resource.
      - datatype: ContactPoint instead of rootconcept
        for: NL-CM:20.6.1 (ContactInformation)
        reason: Contact information in FHIR is represented using the ContactPoint datatype, not as a separate resource.
    Location.telecom:*:
      - datatype: ContactPoint instead of container
        reason: Contact information in FHIR is represented using the ContactPoint datatype, not as a BackboneElement
    Location.address:
      - cardinality: 0..1 instead of 0..*
        reason: The cardinality mismatch between the zib (0..*) and FHIR (0..1) is explained by the restriction of FHIR to limit the Location.address to a physical address while the zib allows for other types of addresses (e.g. a postal address). Other types of addresses than a physical address are given in Organization.address which is referenced by Location.managingOrganization.
      - datatype: Address instead of Reference
        for: NL-CM:17.2.5 (HealthcareProvider.AddressInformation)
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.
      - datatype: Address instead of rootconcept
        for: NL-CM:20.5.1 (AddressInformation)
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.

zib-HealthProfessional-Practitioner:
  zib deviations:
    Practitioner.name:
      - cardinality: 0..* instead of 0..1
        reason: The name information according to zib NameInformation may be split up over multiple instances of Practitioner.name.
      - datatype: HumanName instead of Reference
        reason: A name in FHIR is represented using the HumanName datatype, not as a separate resource.
    Practitioner.name:nameInformation:
      - datatype: HumanName instead of rootconcept
        reason: A name in FHIR is represented using the HumanName datatype, not as a separate resource.
    Practitioner.telecom:
      - cardinality: 0..* instead of 0..1
        for: NL-CM:17.1.8 (HealthProfessional.ContactInformation)
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the missing root element of zib ContactInformation in FHIR. Instead, the two containers of the zib (TelephoneNumbers and EmailAddresses), which both have a cardinality of 0..*, are mapped directly into the resource. Thereby this mapping is still honoring the cardinality requirements of the zib.
      - datatype: ContactPoint instead of Reference
        for: NL-CM:17.1.8 (HealthProfessional.ContactInformation)
        reason: Contact information in FHIR is represented using the ContactPoint datatype, not as a separate resource.
      - datatype: ContactPoint instead of rootconcept
        for: NL-CM:20.6.1 (ContactInformation)
        reason: Contact information in FHIR is represented using the ContactPoint datatype, not as a separate resource.
    Practitioner.telecom:*:
      - datatype: ContactPoint instead of container
        reason: Contact information in FHIR is represented using the ContactPoint datatype, not as a BackboneElement.
    Practitioner.address:
      - datatype: Address instead of Reference
        for: NL-CM:17.1.7 (HealthProfessional.AddressInformation)
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.
      - datatype: Address instead of rootconcept
        for: NL-CM:20.5.1 (AddressInformation)
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.

zib-HealthProfessional-PractitionerRole:
  zib deviations:
    PractitionerRole.telecom:
      - cardinality: 0..* instead of 0..1
        for: NL-CM:17.1.8 (HealthProfessional.ContactInformation)
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the missing root element of zib ContactInformation in FHIR. Instead, the two containers of the zib (TelephoneNumbers and EmailAddresses), which both have a cardinality of 0..*, are mapped directly into the resource. Thereby this mapping is still honoring the cardinality requirements of the zib.
      - datatype: ContactPoint instead of Reference
        for: NL-CM:17.1.8 (HealthProfessional.ContactInformation)
        reason: Contact information in FHIR is represented using the ContactPoint datatype, not as a separate resource.
      - datatype: ContactPoint instead of rootconcept
        for: NL-CM:20.6.1 (ContactInformation)
        reason: Contact information in FHIR is represented using the ContactPoint datatype, not as a separate resource.
    PractitionerRole.telecom*:
      - datatype: ContactPoint instead of container
        reason: Contact information in FHIR is represented using the ContactPoint datatype, not as a BackboneElement.

zib-NameInformation:
  zib deviations:
    HumanName.family.extension:*.value[x]:
      - cardinality: 1..1 instead of 0..1
        reason: The value of the extension is required, but the extension itself is optional, making the effective cardinality 0..1 as required by the zib.
    HumanName.given:
      - short: FirstName / Initial
        reason: The zib defines both the complete list of first names and of initials as a single string. In FHIR this is done fundamentally different, by using separate names. Hence, the short has been changed to the singular form.
      - alias: first name,middle name,Voornaam,Initiaal
        reason: The first two initials are provided by FHIR. For the singular form of the latter two, see the remark above.
      - cardinality: 0..* instead of 0..1
        reason: See the remark above.
    HumanName.prefix:
      - cardinality: 0..* instead of 0..1
        reason: Both prefix and suffix are mapped to the Titles concept from the zib. There's a mismatch however in the way this information is represented in the zib and in FHIR. The mapping is documented in the profile.
    HumanName.suffix:
      - cardinality: 0..* instead of 0..1
        reason: Both prefix and suffix are mapped to the Titles concept from the zib. There's a mismatch however in the way this information is represented in the zib and in FHIR. The mapping is documented in the profile.

zib-NameInformation.GivenName:
  zib deviations:
    HumanName.given:
      - cardinality: 1..* instead of 0..1
        reason: The GivenName is optional according to the zib, but when this datatype profile is used, a name should be provided.

zib-Patient:
  zib deviations:
    Patient.extension:nationality.extension:code.value[x]:
      - cardinality: 1..1 instead of 0..1
        reason: Zib Nationality is implemented using the complex core extension patient-nationality. The .value[x] element representing the concept Nationality has a 1..1 cardinality, but the "code" part of the extension itself is 0..1, making the cardinality effectively 0..1 as required by the zib.
    Patient.name:
      - cardinality: 0..* instead of 0..1
        reason: The name information according to zib NameInformation may be split up over multiple instances of Patient.name.
      - datatype: HumanName instead of Reference
        for: NL-CM:0.1.6 (Patient.NameInformation)
        reason: A name in FHIR is represented using the HumanName datatype, not as a separate resource.
      - datatype: HumanName instead of ST
        for: NL-CM:1.1.5 (Payer.PayerName)
        reason: A name in FHIR is represented using the HumanName datatype, not as a string.
    Patient.name:nameInformation:
      - datatype: HumanName instead of rootconcept
        reason: A name in FHIR is represented using the HumanName datatype, not as a separate resource.
    Patient.telecom:
      - cardinality: 0..* instead of 0..1
        for: NL-CM:0.1.5 (Patient.ContactInformation)
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the missing root element of zib ContactInformation in FHIR. Instead, the two containers of the zib (TelephoneNumbers and EmailAddresses), which both have a cardinality of 0..*, are mapped directly into the resource. Thereby this mapping is still honoring the cardinality requirements of the zib.
      - datatype: ContactPoint instead of Reference
        for: NL-CM:0.1.5 (Patient.ContactInformation)
        reason: Contact information in FHIR is represented using the ContactPoint datatype, not as a separate resource.
      - datatype: ContactPoint instead of rootconcept
        for: NL-CM:20.6.1 (ContactInformation)
        reason: Contact information in FHIR is represented using the ContactPoint datatype, not as a separate resource.
      - cardinality: 0..* instead of 0..1
        for: NL-CM:1.1.12 (Payer.ContactInformation)
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the missing root element of zib ContactInformation in FHIR. Instead, the two containers of the zib (TelephoneNumbers and EmailAddresses), which both have a cardinality of 0..*, are mapped directly into the resource. Thereby this mapping is still honoring the cardinality requirements of the zib.
      - datatype: ContactPoint instead of Reference
        for: NL-CM:1.1.12 (Payer.ContactInformation)
        reason: Contact information in FHIR is represented using the ContactPoint datatype, not as a separate resource.
    Patient.telecom:*:
      - datatype: ContactPoint instead of container
        reason: Contact information in FHIR is represented using the ContactPoint datatype, not as a BackboneElement.
    Patient.deceased[x]:deceasedDateTime:
      - short: DateOfDeath instead of DateOfDeath / DeathIndicator
        reason: This element is mapped to two zib concepts, DateOfDeath and DeathIndicator. However, the latter is implicit; although the zib recognizes both concepts, FHIR supports populating just one of them, thus DeathIndicator is assumed to be 'true' when DateOfDeath is populated. For clarity reasons, the .deceasedDateTime slice has only DateOfDeath mapped to it.
    Patient.address:
      - datatype: Address instead of Reference
        for: NL-CM:0.1.4 (Patient.AddressInformation)
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.
      - datatype: Address instead of Reference
        for: NL-CM:1.1.17 (Payer.AddressInformation)
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.
      - datatype: Address instead of rootconcept
        for: NL-CM:20.5.1 (AddressInformation)
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.
    Patient.multipleBirth[x]:multipleBirthInteger:
      - short: MultipleBirthSequence instead of MultipleBirthSequence / MultipleBirthIndicator
        reason: This element is mapped to two zib concepts, MultipleBirthSequence and MultipleBirthIndicator. However, the latter is implicit; although the zib recognizes both concepts, FHIR supports populating just one of them, thus MultipleBirthIndicator is assumed to be 'true' when MultipleBirthSequence is populated. For clarity reasons, the .multipleBirthInteger slice has only MultipleBirthSequence mapped to it.
    Patient.contact:
      - datatype: BackboneElement instead of rootconcept
        reason: The zib ContactPerson _may_ be represented as Patient.contact. There is a different use case as well, where the ContactPerson is implemented using a RelatedPerson resource.
    Patient.contact.extension:contactPerson.value[x]:
      - datatype: Reference instead of rootconcept
        reason: This is an additional reference to a separate zib-ContactPerson (RelatedPerson) instance, next to the information in Patient.contact. Patient.contact and RelatedPerson can both be used to capture the information from zib-ContactPerson, but each are used within a different context. Information may therefore be duplicated; this is the recommended way.
    Patient.contact.name:
      - datatype: HumanName instead of Reference
        for: NL-CM:3.1.4 (ContactPerson.NameInformation)
        reason: A name in FHIR is represented using the HumanName datatype, not as a separate resource.
      - datatype: HumanName instead of rootconcept
        for: NL-CM:20.4.1 (NameInformation)
        reason: A name in FHIR is represented using the HumanName datatype, not as a separate resource.
    Patient.contact.telecom:
      - cardinality: 0..* instead of 0..1
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the missing root element of zib ContactInformation in FHIR. Instead, the two containers of the zib (TelephoneNumbers and EmailAddresses), which both have a cardinality of 0..*, are mapped directly into the resource. Thereby this mapping is still honoring the cardinality requirements of the zib.
      - datatype: ContactPoint instead of Reference
        for: NL-CM:3.1.6 (ContactPerson.ContactInformation)
        reason: ContactInformation in FHIR is represented using the ContactPoint datatype, not as a separate resource.
      - datatype: ContactPoint instead of rootconcept
        for: NL-CM:20.6.1 (ContactInformation)
        reason: ContactInformation in FHIR is represented using the ContactPoint datatype, not as a separate resource.
    Patient.contact.telecom:*:
      - datatype: ContactPoint instead of container
        reason: Contact information in FHIR is represented using the ContactPoint datatype, not as a BackboneElement.
    Patient.contact.address:
      - cardinality: 0..1 instead of 0..*
        reason: Patient.contact is a restricted representation of contact persons containing only information needed to contact a contact person. The full address information should be captured using an instance of the zib-ContactPerson profile on RelatedPerson, which can be linked using an extension. This is explained in the profile.
      - datatype: Address instead of Reference
        for: NL-CM:3.1.5 (ContactPerson.AddressInformation)
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.
      - datatype: Address instead of rootconcept
        for: NL-CM:20.5.1 (AddressInformation)
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.
    Patient.communication:
      - datatype: BackboneElement instead of rootconcept
        reason: The appropriate representation of zib LanguageProficiency in FHIR is Patient.communication, not a separate resource.
    Patient.communication.extension:languageControl:
      - cardinality: 0..* instead of 0..1
        reason: Because of the nature of this extension the cardinality has a mismatch. Three zib concepts are mapped to this extension. Therefore the extension cannot be 0..1, but should be able to repeat.
      - datatype: Extension instead of CD
        reason: The mapping is placed on the extension and not on the .value[x] because of the nature of this extension. The extension itself contains a .valueCoding that is populated with the value of the zib. This datatype matches the zib CD type.
    Patient.communication.language:
      - cardinality: 1..1 instead of 0..1
        reason: The FHIR profiles are expected to implement zib cardinalities as conceptual cardinalities, but FHIR requires the .language element to be present. This aligns with the intention of the zib, as the Language concept is required for zib LanguageProficiency to make sense.

zib-Problem:
  zib deviations:
    Condition.bodySite:
      - datatype: CodeableConcept instead of a reference
        for: NL-CM:5.1.14 (Problem.ProblemAnatomicalLocation)
        reason: AnatomicalLocation in FHIR is primarily represented using the CodeableConcept datatype (and secondarily as a reference to BodyStructure within that CodeableConcept), hence the datatype is not Reference.
      - cardinality: 0..* instead of 0..1
        for: NL-CM:20.7.4 (AnatomicalLocation.Location)
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the fact that both the ProblemAnatomicalLocation concept from zib Problem and the Location concept from zib AnatomicalLocation are mapped on the same level in FHIR. Setting the cardinality to 0..* allows for multiple instances of AnatomicalLocation, which is in accordance with zib Problem.

unmapped zib concepts:
  - NL-CM:17.2.10: HealthcareProvider.LocationNumber
    reason: This zib concept is problematic to map cleanly to FHIR and it has been deemed too uncommon in practice to warrant an extension.

---
# The following issues are not "real" deviations stemming from design choices, but rather problems that pop up due to
# shortcomings in tooling, the used terminology server, etc.
# These might occur in one or more profiles, or in none if they have been fixed in the meantime. 

issues should occur: false

2.16.840.1.113883.2.4.3.11.60.40.2.5.1.3--20240415000000:
  ignored issues:
    ValueSet.compose.include[*]:
      - message: "There are multiple different potential matches for the url 'http://hl7.org/fhir/sid/icd-10-nl'. It might be a good idea to fix to the correct version to reduce the likelihood of a wrong version being selected by an implementation/implementer. Using version '2009-10-07T12:00:00', found versions: 2.1.1, 2009-10-07T12:00:00"
        reason: The fact that there are multiple matches for the url results in no issue, since the correct version is used nonetheless.
      - message: "There are multiple different potential matches for the url 'http://hl7.org/fhir/sid/icf-nl'. It might be a good idea to fix to the correct version to reduce the likelihood of a wrong version being selected by an implementation/implementer. Using version '2010-11-16T12:00:00', found versions: 1.0.0, 2010-11-16T12:00:00"
        reason: The fact that there are multiple matches for the url results in no issue, since the correct version is used nonetheless.

nl-core-*:
  ignored issues:
    "*.address*.country.extension[*].value.ofType(CodeableConcept).coding[*].display":
      - message: Wrong Display Name 'Nederland' for urn:iso:std:iso:3166#NL. Valid display is 'Netherlands' (for the language(s) 'en')
        reason: A valid Dutch display value is used instead of an English one.
    "*.address[*].extension[*].value.ofType(CodeableConcept).coding[*].display":
      - message: Wrong Display Name 'Visit Address' for http://terminology.hl7.org/CodeSystem/v3-AddressUse#PHYS. Valid display is 'physical visit address' (en) (for the language(s) 'en')
        reason: This core display value is redefined by the ValueSet, but this isn't properly recognized by the validator.
    "*.telecom[*].extension[*].value.ofType(CodeableConcept).coding[*].display":
      - message: Wrong Display Name 'Emergencycontact' for http://terminology.hl7.org/CodeSystem/v3-AddressUse#EC. Valid display is 'emergency contact' (en) (for the language(s) 'en')
        reason: This core display value is redefined by the ValueSet, but this isn't properly recognized by the validator.
    Observation:
      - message: "Best Practice Recommendation: In general, all observations should have a performer"
        reason: Observation.performer is only added to the FHIR instance if there is a zib mapping present on that element in the profile and the corresponding zib concept is filled in the corresponding example.
      - message: "Best Practice Recommendation: In general, all observations should have an effective[x] ()"
        reason: Observation.effective[x] is only added to the FHIR instance if there is a zib mapping present on that element in the profile and the corresponding zib concept is filled in the corresponding example.

nl-core-BodyHeight-*:
  ignored issues:
    Observation.code:
      - message: None of the codings provided are in the value set 'Vital Signs' (http://hl7.org/fhir/ValueSet/observation-vitalsignresult|4.0.1), and a coding should come from this value set unless it has no suitable code (note that the validator cannot judge what is suitable)
        reason: The code used is the magic LOINC code for body height, hence this issue should not arise.
    Observation.code.coding[*].display:
      - message: Wrong Display Name 'Lichaamslengte' for http://loinc.org#8302-2. There are no valid display names found for language(s) 'en'. Default display is 'Body height'
        reason: A valid Dutch display value is used instead of an English one.
    Observation.component[*].code:
      - message: None of the codings provided are in the value set 'Vital Signs' (http://hl7.org/fhir/ValueSet/observation-vitalsignresult|4.0.1), and a coding should come from this value set unless it has no suitable code (note that the validator cannot judge what is suitable)
        reason: The validator checks all Observations with a vital signs magic LOINC code against the HL7 Vital Signs base profile. Unfortunately, this profile restricts the allowed components to only the use cases identified by HL7, while the zib adds additional data. This has been identified as a bug in het HL7 Vital Signs profile, which will be fixed in the next version. See https://jira.hl7.org/browse/FHIR-43353 for more information.

nl-core-BodyWeight-*:
  ignored issues:
    Observation.code:
      - message: None of the codings provided are in the value set 'Vital Signs' (http://hl7.org/fhir/ValueSet/observation-vitalsignresult|4.0.1), and a coding should come from this value set unless it has no suitable code (note that the validator cannot judge what is suitable)
        reason: The code used is the magic LOINC code for body weight, hence this issue should not arise.
    Observation.code.coding[*].display:
      - message: Wrong Display Name 'Lichaamsgewicht' for http://loinc.org#29463-7. There are no valid display names found for language(s) 'en'. Default display is 'Body weight'
        reason: A valid Dutch display value is used instead of an English one.
    Observation.component[*].code:
      - message: None of the codings provided are in the value set 'Vital Signs' (http://hl7.org/fhir/ValueSet/observation-vitalsignresult|4.0.1), and a coding should come from this value set unless it has no suitable code (note that the validator cannot judge what is suitable)
        reason: The validator checks all Observations with a vital signs magic LOINC code against the HL7 Vital Signs base profile. Unfortunately, this profile restricts the allowed components to only the use cases identified by HL7, while the zib adds additional data. This has been identified as a bug in het HL7 Vital Signs profile, which will be fixed in the next version. See https://jira.hl7.org/browse/FHIR-43353 for more information.

nl-core-DevelopmentChild.AgeFirstMenstruation-*:
  ignored issues:
    Observation.code.coding[*].display:
      - message: Wrong Display Name 'Leeftijd bij eerste menstruatie' for http://loinc.org#42798-9. There are no valid display names found for language(s) 'en'. Default display is 'Age at menarche'
        reason: A valid Dutch display value is used instead of an English one.

nl-core-HealthcareProvider-Organization-*:
  ignored issues:
    Organization.type[*]:
      - message: A definition for CodeSystem 'urn:oid:2.16.840.1.113883.2.4.6.7' could not be found, so the code cannot be validated; Unable to check whether the code is in the value set 'http://decor.nictiz.nl/fhir/ValueSet/2.16.840.1.113883.2.4.3.11.60.40.2.17.2.4--20240415000000|2024-04-15T00:00:00' because the code system urn:oid:2.16.840.1.113883.2.4.6.7 was not found
        reason: This code system represents the Vektis AGB-medische specialismen, which the default terminology server is unable to check.
      - message: Unable to check whether the code is in the value set 'http://decor.nictiz.nl/fhir/ValueSet/2.16.840.1.113883.2.4.3.11.60.40.2.17.2.4--20240415000000|2024-04-15T00:00:00' because the code system urn:oid:2.16.840.1.113883.2.4.6.7 was not found
        reason: This code system represents the Vektis AGB-medische specialismen, which the default terminology server is unable to check.
    Organization.type[*].coding[*].system:
      - message: A definition for CodeSystem 'urn:oid:2.16.840.1.113883.2.4.6.7' could not be found, so the code cannot be validated
        reason: This code system represents the Vektis AGB-medische specialismen, which the default terminology server is unable to check.

nl-core-Problem-*:
  ignored issues:
    Condition.code:
      - message: Unable to check whether the code is in the value set 'http://decor.nictiz.nl/fhir/ValueSet/2.16.840.1.113883.2.4.3.11.60.40.2.5.1.3--20240415000000|2024-04-15T00:00:00' because the code system http://hl7.org/fhir/sid/icd-10-nl| was not found
        reason: This code system represents the Dutch translation of ICD-10, which the default terminology server is unable to check.
      - message: Unable to check whether the code is in the value set 'http://decor.nictiz.nl/fhir/ValueSet/2.16.840.1.113883.2.4.3.11.60.40.2.5.1.3--20240415000000|2024-04-15T00:00:00' because the code system urn:oid:2.16.840.1.113883.2.4.3.120.5.1| was not found
        reason: This code system represents the DHD Diagnosethesaurus, which the default terminology server is unable to check.
    Condition.code.coding[*].system:
      - message: A definition for CodeSystem 'http://hl7.org/fhir/sid/icd-10-nl' could not be found, so the code cannot be validated
        reason: This code system represents the Dutch translation of ICD-10, which the default terminology server is unable to check.
      - message: A definition for CodeSystem 'urn:oid:2.16.840.1.113883.2.4.3.120.5.1' could not be found, so the code cannot be validated
        reason: This code system represents the DHD Diagnosethesaurus, which the default terminology server is unable to check.

nl-core-Problem-full-03:
  ignored issues:
    Condition.bodySite[0]:
      - message: No code provided, and a code should be provided from the value set 'LocatieCodelijsten' (http://decor.nictiz.nl/fhir/ValueSet/2.16.840.1.113883.2.4.3.11.60.121.11.11--20240415000000|2024-04-15T00:00:00)
        reason: This example contains no code on .bodySite, since its functional counterpart contains an AnatomicalLocation for which only the Laterality is specified (which is mapped to the BodyStructure resource referenced here). This is no issue since the binding is extensible.

zib-ContactInformation-TelephoneNumbers:
  zib deviations:
    ContactPoint.extension:comment.value[x]:
      - cardinality: 0..* instead of 0..1
        reason: The cardinality of the extension itself is 0..1, making the effective cardinality 0..1 as required by the zib. It seems the QA tooling does not take into account the cardinality of the extension element itself.
    ContactPoint.extension:purpose.value[x]:
      - cardinality: 0..* instead of 0..1
        reason: The cardinality of the extension itself is 0..1, making the effective cardinality 0..1 as required by the zib. It seems the QA tooling does not take into account the cardinality of the extension element itself.

zib-ContactPerson:
  ignored issues:
    RelatedPerson.address:
      - message: "Constraint failed: sd-pg-02: 'If mapping.map exists and the mapping is not implicit, short should exist'"
        reason: The short description is defined on the datatype profile and is not repeated in the differential.
      - message: "Constraint failed: sd-pg-04: 'If mapping.map exists and the mapping is not implicit, alias should exist.'"
        reason: The alias is defined on the datatype profile and is not repeated in the differential.

zib-HealthcareProvider:
  ignored issues:
    Location.address:
      - message: "Constraint failed: sd-pg-02: 'If mapping.map exists and the mapping is not implicit, short should exist'"
        reason: The required short description is given by the datatype profile, so it is absent from the differential.
      - message: "Constraint failed: sd-pg-04: 'If mapping.map exists and the mapping is not implicit, alias should exist.'"
        reason: The required alias is given by the datatype profile, so it is absent from the differential.

zib-HealthProfessional-Practitioner:
  ignored issues:
    Practitioner.address:
      - message: "Constraint failed: sd-pg-02: 'If mapping.map exists and the mapping is not implicit, short should exist'"
        reason: The required short description is given by the datatype profile, so it is absent from the differential.
      - message: "Constraint failed: sd-pg-04: 'If mapping.map exists and the mapping is not implicit, alias should exist.'"
        reason: The required alias is given by the datatype profile, so it is absent from the differential.

zib-NameInformation:
  zib deviations:
    HumanName.extension:nameUsage.value[x]:
      - cardinality: 0..* instead of 0..1
        reason: The cardinality of the extension itself is 0..1, making the effective cardinality 0..1 as required by the zib. It seems the QA tooling does not take into account the cardinality of the extension element itself.

zib-Patient:
  ignored issues:
    Patient.address:
      - message: "Constraint failed: sd-pg-02: 'If mapping.map exists and the mapping is not implicit, short should exist'"
        reason: The short description is defined on the datatype profile and is not repeated in the differential.
      - message: "Constraint failed: sd-pg-04: 'If mapping.map exists and the mapping is not implicit, alias should exist.'"
        reason: The alias is defined on the datatype profile and is not repeated in the differential.
    Patient.contact.name:
      - message: "Constraint failed: sd-pg-02: 'If mapping.map exists and the mapping is not implicit, short should exist'"
        reason: The short description is defined on the datatype profile and not repeated in the differential.
      - message: "Constraint failed: sd-pg-04: 'If mapping.map exists and the mapping is not implicit, alias should exist.'"
        reason: The alias is defined on the datatype profile and not repeated in the differential.
    Patient.contact.address:
      - message: "Constraint failed: sd-pg-02: 'If mapping.map exists and the mapping is not implicit, short should exist'"
        reason: The short description is defined on the datatype profile and not repeated in the differential.
      - message: "Constraint failed: sd-pg-04: 'If mapping.map exists and the mapping is not implicit, alias should exist.'"
        reason: The alias is defined on the datatype profile and not repeated in the differential.